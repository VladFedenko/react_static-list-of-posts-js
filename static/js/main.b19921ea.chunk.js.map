{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","getCommentById","commentsFromServer","filter","postId","postsFromServer","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"k18IAAO,MAAMA,EAAc,QAAC,QAAEC,GAAH,SACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,SAhBY,ECIdC,EAAc,QAAC,SAAEC,GAAH,SACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAIR,GACZ,cAACD,EAAD,CAA8BC,QAASA,GAArBA,EAAQS,OAHL,E,MCFpB,MAAMC,EAAW,QAAC,KAAEC,GAAH,SACtB,8BACG,eAED,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SALY,ECGXU,EAAW,QAAC,KAAEC,GAAH,SACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKC,QAGPD,EAAKF,MAAQ,cAAC,EAAD,CAAUA,KAAME,EAAKF,UAGrC,mBAAGV,UAAU,iBAAb,SACGY,EAAKR,OAEPQ,EAAKN,SAASQ,OAAS,EACpB,cAAC,EAAD,CAAaR,SAAUM,EAAKN,WAE5B,qCACE,uBACA,mBAAG,UAAQ,oBAAX,kCAlBc,ECHXS,EAAW,QAAC,MAAEC,GAAH,SACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMT,KAAIK,GACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,OAHF,ECKxB,SAASS,EAAeT,GACtB,OAAOU,EAAmBC,QAAOpB,GAAWA,EAAQqB,SAAWZ,KAC1D,IACN,CAOM,MAAMQ,EAAQK,EAAgBd,KAAIK,IAAI,UACxCA,EACHF,MAPmBF,EAODI,EAAKU,OANhBC,EAAgBC,MAAKd,GAAQA,EAAKF,KAAOA,KAC3C,MAMLF,SAAUW,EAAeL,EAAKJ,KARhC,IAAqBA,CAKA,IAMRiB,EAAM,IACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAACe,EAAD,CAAUC,MAAOA,OCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.b19921ea.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo key={comment.id} comment={comment} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      {post.user && <UserInfo user={post.user} />}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    {post.comments.length > 0\n      ? <CommentList comments={post.comments} />\n      : (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id)\n    || null;\n}\n\nfunction getUserbyId(id) {\n  return usersFromServer.find(user => user.id === id)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserbyId(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}